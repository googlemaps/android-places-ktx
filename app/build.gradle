/**
 * Copyright 2024 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.2.20'
}

android {
    lint {
        sarifOutput = file("$buildDir/reports/lint-results.sarif")
    }

    compileSdk libs.versions.androidCompileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.google.maps.android.ktx.demo"
        minSdk libs.versions.androidMinSdk.get().toInteger()
        targetSdk libs.versions.androidTargetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    buildFeatures {
        buildConfig = true
        compose = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    namespace "com.google.places.android.ktx.demo"
}

dependencies {
    implementation platform(libs.androidx.compose.bom)

    // Core Compose libraries
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.compose.material3
    implementation libs.androidx.activity.compose

    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.test.manifest

    implementation libs.appcompat
    implementation libs.core.ktx
    implementation libs.kotlin.stdlib
    implementation libs.multidex
    implementation libs.play.services.maps
    implementation libs.fragment.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.material
    implementation libs.volley

    // Hilt
    implementation libs.hilt.android
    implementation libs.runtime
    kapt libs.hilt.android.compiler

    implementation project(':places-ktx')
}

secrets {
    propertiesFileName 'secrets.properties'
    defaultPropertiesFileName 'local.defaults.properties'
}
